<Inicial> ::= <ListaClases>
<ListaClases> ::= <Clase> <ListaClases> | <Clase>
<Clase> ::= class idClase <Herencia> { <ListaMiembros> }
<Herencia> ::= extends idClase | ε
<ListaMiembros> ::= <Miembro> <ListaMiembros> | ε
<Miembro> ::= <Atributo> | <Constructor> | <Metodo>
<Atributo> ::= <Visibilidad> <Tipo> <ListaDecAtrs> ;
<Metodo> ::= <FormaMetodo> <TipoMetodo> idMetVar <ArgsFormales> <Bloque>
<Constructor> ::= idClase <ArgsFormales> <Bloque>
<Visibilidad> ::= public | private
<Tipo> ::= <TipoPrimitivo> | idClase
<TipoPrimitivo> ::= boolean | char | int | String
<ListaDecAtrs> ::= idMetVar
<ListaDecAtrs> ::= idMetVar , <ListaDecAtrs>
<FormaMetodo> ::= static | dynamic
<TipoMetodo> ::= <Tipo> | void
<ArgsFormales> ::= ( <ListaArgsFormalesOVacio> )
<ListaArgsFormalesOVacio> ::= <ListaArgsFormales> | ε
<ListaArgsFormales> ::= <ArgFormal>
<ListaArgsFormales> ::= <ArgFormal> , <ListaArgsFormales>
<ArgFormal> ::= <Tipo> idMetVar
<Bloque> ::= { <ListaSentencias> }
<ListaSentencias> ::= <Sentencia> <ListaSentencias> | ε
<Sentencia> ::= ;
<Sentencia> ::= <Asignacion> ;
<Sentencia> ::= <Llamada> ;
<Sentencia> ::= <VarLocal> ;
<Sentencia> ::= <Return> ;
<Sentencia> ::= <If>
<Sentencia> ::= <For>
<Sentencia> ::= <Bloque>
<Asignacion> ::= <Acceso> <TipoDeAsignacion>
<TipoDeAsignacion> ::= = <Expresion> | ++ | - -
<Llamada> ::= <Acceso>
<VarLocal> ::= <Tipo> idMetVar
<VarLocal> ::= <Tipo> idMetVar = <Expresion>
<Return> ::= return <ExpresionOVacio>
<ExpresionOVacio> ::= <Expresion> | ε
<If> ::= if ( <Expresion> ) <Sentencia>
<If> ::= if ( <Expresion> ) <Sentencia> else <Sentencia>
<For> ::= for ( <VarLocal> ; <Expresion> ; <Asignacion> ) <Sentencia>
<Expresion> ::= <Expresion> <OperadorBinario> <ExpresionUnaria>
<Expresion> ::= <ExpresionUnaria>
<OperadorBinario> ::= || | && | == | != | < | > | <= | >= | + | - | * | / | %
<ExpresionUnaria> ::= <OperadorUnario> <Operando>
<ExpresionUnaria> ::= <Operando>
<OperadorUnario> ::= + | - | !
<Operando> ::= <Literal>
<Operando> ::= <Acceso>
<Literal> ::= null | true | false | intLiteral | charLiteral | stringLiteral
<Acceso> ::= <Primario> <Encadenado>
<Acceso> ::= <Casting> <Primario> <Encadenado>
<Casting> ::= ( IdClase )
<Primario> ::= <AccesoThis>
<Primario> ::= <AccesoVar>
<Primario> ::= <AccesoConstructor>
<Primario> ::= <AccesoMetodo>
<Primario> ::= <ExpresionParentizada>
<AccesoThis> ::= this
<AccesoVar> ::= idMetVar
<AccesoConstructor> ::= new idClase <ArgsActuales>
<ExpresionParentizada> ::= ( <Expresion> )
<AccesoMetodo> ::= idMetVar <ArgsActuales>
<ArgsActuales> ::= ( <ListaExpsOVacio> )
<ListaExpsOVacio> ::= <ListaExps> | ε
<ListaExps> ::= <Expresion>
<ListaExps> ::= <Expresion> , <ListaExps>
<Encadenado> ::= <VarOMetodoEncadenado><Encadenado> | ε
<VarOMetodoEncadenado> ::= <VarEncadenada>
<VarOMetodoEncadenado> ::= <MetodoEncadenado>
<VarEncadenada> ::= . idMetVar
<MetodoEncadenado> ::= . idMetVar <ArgsActuales>